# Usage:
#     docker-compose run archivebox init --setup
#     docker-compose up
#     echo "https://example.com" | docker-compose run archivebox archivebox add
#     docker-compose run archivebox add --depth=1 https://example.com/some/feed.rss
#     docker-compose run archivebox config --set PUBLIC_INDEX=True
#     docker-compose run archivebox help
# Documentation:
#     https://github.com/ArchiveBox/ArchiveBox/wiki/Docker#docker-compose


version: '3.3'
services:
    nginx-proxy:
        image: nginxproxy/nginx-proxy
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - nginx_certs:/etc/nginx/certs
            - nginx_vhost:/etc/nginx/vhost.d
            - nginx_html:/usr/share/nginx/html
            - /var/run/docker.sock:/tmp/docker.sock:ro
        environment:
            - HTTPS_METHOD=redirect
        labels:
            - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

    acme-companion:
        image: nginxproxy/acme-companion
        depends_on:
            - nginx-proxy
        volumes:
            - nginx_certs:/etc/nginx/certs
            - nginx_vhost:/etc/nginx/vhost.d
            - nginx_html:/usr/share/nginx/html
            - nginx_acme:/etc/acme.sh
            - /var/run/docker.sock:/var/run/docker.sock:ro
        env_file:
            - secrets/nginx-acme.env
    
#    sign-fcgi:
#        build: ./sign-fcgi/Dockerfile
#        image: sign-fcgi:0.1
#        expose:
#            - "7532"
#        environment:
#            - VIRTUAL_HOST=sign.uenotformit.org
#            - LETSENCRYPT_HOST=sign.uenotformit.org
#            - VIRTUAL_PORT=7532
#            - VIRTUAL_PROTO=fastcgi

    archivebox:
        # build: .                              # for developers working on archivebox
        image: archivebox/archivebox
        command: archivebox server --quick-init 0.0.0.0:8000
        expose:
            - "8000"
        environment:
            - VIRTUAL_HOST=archive.uenotformit.org
            - LETSENCRYPT_HOST=archive.uenotformit.org
            - VIRTUAL_PORT=8000
            - ALLOWED_HOSTS=*
            - MEDIA_MAX_SIZE=10m
            - FOOTER_INFO=Content is hosted to mirror and archive relevant MIT unionization effort websites.
            - SAVE_PDF=False
            - SAVE_WARC=False
            - TIMEOUT=120
            - SAVE_SINGLEFILE=False
            - SAVE_SCREENSHOT=False
            - SAVE_DOM=False
            - SAVE_READABILITY=False
            - SAVE_MERCURY=False
            - SAVE_GIT=False
            - SAVE_MEDIA=False
            - SAVE_ARCHIVE_DOT_ORG=True
        env_file:
            - conf/archive_lists.env
        volumes:
            - ./data:/data
        deploy:
            resources:
                limits:
                    cpus: '0.5'

    plausible_db:
        image: postgres:12
        restart: always
        volumes:
            - db-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_PASSWORD=postgres

    plausible_events_db:
        image: yandex/clickhouse-server:21.3.2.5
        restart: always
        volumes:
            - event-data:/var/lib/clickhouse
            - ./clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro
            - ./clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro
        ulimits:
            nofile:
                soft: 262144
                hard: 262144

    plausible:
        image: plausible/analytics:latest
        restart: always
        command: sh -c "sleep 10 && /entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh db init-admin && /entrypoint.sh run"
        depends_on:
            - plausible_db
            - plausible_events_db
            - geoip
        expose:
            - "8000"
        environment:
            - VIRTUAL_HOST=plausible.uenotformit.org
            - LETSENCRYPT_HOST=plausible.uenotformit.org
            - VIRTUAL_PORT=8000
            - GEOLITE2_COUNTRY_DB=/geoip/GeoLite2-Country.mmdb
            - DISABLE_REGISTRATION=true
            - DISABLE_SUBSCRIPTION=true
        env_file:
            - secrets/plausible-conf.env
        volumes:
            - geoip:/geoip:ro
        deploy:
            resources:
                limits:
                    cpus: '0.25'

    geoip:
        image: maxmindinc/geoipupdate
        restart: always
        environment:
            - GEOIPUPDATE_EDITION_IDS=GeoLite2-Country
            - GEOIPUPDATE_FREQUENCY=168 # update every 7 days
        env_file:
            - secrets/geoip.env
        volumes:
            - geoip:/usr/share/GeoIP

volumes:
    db-data:
        driver: local
    event-data:
        driver: local
    geoip:
        driver: local
    nginx_certs:
        driver: local
    nginx_vhost:
        driver: local
    nginx_html:
        driver: local
    nginx_acme:
        driver: local

        # To run the Sonic full-text search backend, first download the config file to sonic.cfg
        # curl -O https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/master/etc/sonic.cfg
        # after starting, backfill any existing Snapshots into the index: docker-compose run archivebox update --index-only
        # sonic:
        #    image: valeriansaliou/sonic:v1.3.0
        #    expose:
        #        - 1491
        #    environment:
        #        - SEARCH_BACKEND_PASSWORD=SecretPassword
        #    volumes:
        #        - ./sonic.cfg:/etc/sonic.cfg:ro
        #        - ./data/sonic:/var/lib/sonic/store


        ### Optional Addons: tweak these examples as needed for your specific use case

        # Example: Run scheduled imports in a docker instead of using cron on the
        # host machine, add tasks and see more info with archivebox schedule --help
        # scheduler:
        #    image: archivebox/archivebox:latest
        #    command: schedule --foreground --every=day --depth=1 'https://getpocket.com/users/USERNAME/feed/all'
        #    environment:
        #        - USE_COLOR=True
        #        - SHOW_PROGRESS=False
        #    volumes:
        #        - ./data:/data

        # Example: Put Nginx in front of the ArchiveBox server for SSL termination
        # nginx:
        #     image: nginx:alpine
        #     ports:
        #         - 443:443
        #         - 80:80
        #     volumes:
        #         - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
        #         - ./data:/var/www

        # Example: run all your ArchiveBox traffic through a WireGuard VPN tunnel
        # wireguard:
        #   image: linuxserver/wireguard
        #   network_mode: 'service:archivebox'
        #   cap_add:
        #     - NET_ADMIN
        #     - SYS_MODULE
        #   sysctls:
        #     - net.ipv4.conf.all.rp_filter=2
        #     - net.ipv4.conf.all.src_valid_mark=1
        #   volumes:
        #     - /lib/modules:/lib/modules
        #     - ./wireguard.conf:/config/wg0.conf:ro

        # Example: Run PYWB in parallel and auto-import WARCs from ArchiveBox
        # pywb:
        #     image: webrecorder/pywb:latest
        #     entrypoint: /bin/sh 'wb-manager add default /archivebox/archive/*/warc/*.warc.gz; wayback --proxy;'
        #     environment:
        #         - INIT_COLLECTION=archivebox
        #     ports:
        #         - 8080:8080
        #     volumes:
        #         ./data:/archivebox
        #         ./data/wayback:/webarchive
